// Code generated by MockGen. DO NOT EDIT.
// Source: /opt/gophkeeper/internal/utils/uuid_controller/uuid_controller.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUUIDController is a mock of UUIDController interface.
type MockUUIDController struct {
	ctrl     *gomock.Controller
	recorder *MockUUIDControllerMockRecorder
}

// MockUUIDControllerMockRecorder is the mock recorder for MockUUIDController.
type MockUUIDControllerMockRecorder struct {
	mock *MockUUIDController
}

// NewMockUUIDController creates a new mock instance.
func NewMockUUIDController(ctrl *gomock.Controller) *MockUUIDController {
	mock := &MockUUIDController{ctrl: ctrl}
	mock.recorder = &MockUUIDControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUUIDController) EXPECT() *MockUUIDControllerMockRecorder {
	return m.recorder
}

// GetUUID mocks base method.
func (m *MockUUIDController) GetUUID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUUID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUUID indicates an expected call of GetUUID.
func (mr *MockUUIDControllerMockRecorder) GetUUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUUID", reflect.TypeOf((*MockUUIDController)(nil).GetUUID))
}
