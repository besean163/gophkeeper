// Code generated by MockGen. DO NOT EDIT.
// Source: /opt/gophkeeper/internal/utils/time_controller/time_controller.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTimeController is a mock of TimeController interface.
type MockTimeController struct {
	ctrl     *gomock.Controller
	recorder *MockTimeControllerMockRecorder
}

// MockTimeControllerMockRecorder is the mock recorder for MockTimeController.
type MockTimeControllerMockRecorder struct {
	mock *MockTimeController
}

// NewMockTimeController creates a new mock instance.
func NewMockTimeController(ctrl *gomock.Controller) *MockTimeController {
	mock := &MockTimeController{ctrl: ctrl}
	mock.recorder = &MockTimeControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTimeController) EXPECT() *MockTimeControllerMockRecorder {
	return m.recorder
}

// Now mocks base method.
func (m *MockTimeController) Now() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Now")
	ret0, _ := ret[0].(int64)
	return ret0
}

// Now indicates an expected call of Now.
func (mr *MockTimeControllerMockRecorder) Now() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Now", reflect.TypeOf((*MockTimeController)(nil).Now))
}
